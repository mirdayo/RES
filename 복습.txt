화면 설계

UI - 사용자와 컴퓨터 상호 간의 소통을 원할히 하게 도와주는 연계 작업
UI의 설계 원칙
직관성 : 누구나 쉽게 이해하고 사용할 수 있어야 한다.
유효성 : 사용자의 목적을 정확하게 달성하여야 한다.
학습성 : 누구나 쉽게 배우고 익힐 수 있어야 한다.
유연성 : 사용자의 요구사항을 최대한 수용하며, 오류를 최소화하여야 한다.
UI의 설계 지침
사용자 중심 : 사용자가 이해하기 편하고 쉽게 사용할 수 있는 환경을 제공하며 실사용자에 대한 이해가 바탕이 되어야 한다.
일관성 : 버튼이나 조작 방법을 사용자가 기억하기 쉽고 빠른 습득이 가능하게 설계하여야 한다.
단순성 : 조작 방법은 가장 간단하게 작동이 가능하도록 하여 인지적 부담을 감소시켜야 한다.
결과 예측 가능 : 작동시킬 기능만 보고도 결과 예측이 가능하여야 한다.
가시성 : 주요 기능을 메인 화면에 노출하여 조작이 쉽도록 하여야 한다.
표준화 : 디자인을 표준화하여 기능 구조의 선행 학습 이후 쉽게 사용할 수 있어야 한다.
접근성 : 사용자의 직무, 연령, 성별 등 다양한 계층을 수용하여야 한다.
명확성 : 사용자가 개념적으로 쉽게 인지하여야 한다.
오류 발생 해결 : 사용자가 오류에 대한 상황을 정확히 인지할 수 있어야 한다.
품질 요구사항 - 기능성, 신뢰성, 사용성, 효율성, 유지보수성, 이식성
기능적 요구사항 - 시스템 입출력으로 무엇이 포함되어야 하나?, 시스템이 어떤 데이터르 저장해야 하나?, 시스템이 어떤 연산을 수행해야 하나?, 기타 요구사항(ex) 동기화 등)
비기능적 요구사항 : 품질에 관한 요구사항, 플랫폼이나 사용 기술 등 시스템 환경에 관한 요구사항, 일정이나 비용 플로젝트 계획에 관한 요구사항


UI 스타일 가이드
구동 환경을 정의한다 - 컴퓨터 OS, 웹 브라우저, 모니터 해상도, 프레임 세트
레이아웃을 정의한다 - 화면 구조, 상단 메뉴 구성, 로고 구역, 로그인 유저, 퀵 메뉴, 메인 nav, 좌측 메뉴 구성, 내용 구성, 하단 메뉴 구성, 페이지 폭 정의, 모듈 뷰 정의, 각종 버튼을 정의
UI 패턴 모델 정의한다 - Client 정의(브라우저, 프로그래밍, 서버 통신, UI Control), 서버 컨트롤러를 정의, 서버 메시지 및 예외 처리를 정의, 클라-서버 간 데이터 변환을 정의
UI표준 수립을 위한 조직을 구성한다 - 조직 구성 및 역할 정의, 커뮤니케이션 방안 수립
UI표준을 위한  환경을 분석한다 - 사용자 트렌드를 분석, 기능 및 설계를 분석, 오류 방지에 대해 분석, 최소한의 조작으로 업무 처리 가능한 형태 확인, UI의 정보 전달력을 확인
비즈니스 요구사항을 확인한다 - 목표를 정의, 활동 사항을 정의, 인터뷰 진행, 요구사항 요소 확인, 시나리오 작성
유스케이스 다이어그램 -  시스템과 사용자의 상호작용을 다이어그램으로 표현한 것으로 사용자의 관점에서 시스템의 서비스 혹은 기능 및 그와 관련한 외부 요소를 보여주는 것이다
시스템(System) : 만들고자 하는 프로그램을 나타낸다.
액터(Actor) : 시스템의 외부에 있고 시스템과 상호작용을 하는 사람(시스템의 기능을 사용하는 사람), 시스템(시스템에 정보를 제공하는 또 다른 시스템)을 말한다
유스케이스(Usecase) : 사용자 입장에서 바라본 시스템의 기능 시스템이 액터에게 제공해야 하는 기능으로 시스템의 요구사항을 나타낸다.
관계성 : 액터와 유스케이스 사이의 의미있는 관계를 나타낸다. 종류는 연관(Association), 의존(Dependency), 일반화(Generalization)이 있으며 의존관계는 포함(Include), 확장(Extend)로 나눠진다.
  4-1. 포함 관계(Include)는 하나의 유스케이스가 다른 유스케이스의 실행을 전제로 할 때 형성되는 관계이다.
포함되는 유스케이스는 포함하는 유스케이스를 실행하기 위해 반드시 실행되어야 하는 경우에 적용한다.

포함하는 유스케이스에서 포함되는 유스케이스 방향으로 화살표를 점선으로 연결하고 <<include>>라고 표기한다.

  4-2. 확장 관계(Extend)는 확장 기능 유스케이스와 확장 대상 유스케이스 사이에 형성 되는 관계이다.
확장 대상 유스케이스를 수행 할 때 특정 조건에 따라 확장 기능 유스케이스를 수행하는 경우에 적용한다.
확장 기능 유스케이스에서 확장 대상 유스케이스 방향으로 화살표를 점선으로 연결하고 <<extend>>라고 표기한다.

  4-3. 일반화 관계(Generalization)는 유사한 유스케이스 또는 액터를 모아 추상화한 유스케이스 또는 액터와 연결시켜 그룹을 만들어 이해도를 높이기 위한 관계이다. 구체적인 유스케이스에서 추상적인 유스케이스 방향으로 끝부분이 삼각형으로 표현된 화살표를 실선으로 연결하여 표현한다.


와이어 프레임 - 웹사이트의 골격이나 애플리케이션의 사용자 인터페이스(UI) 및 핵심 기능을 나타내는 단순한 선과 도형으로 구성된 다이어그램 또는 다이어그램의 집합 ★ 카카오 오븐 이용

git - 리누스 토르발스가 개발한 분산형 버전 관리 시스템(VCS)

git init - 기본적인 .git 폴더 생성
git status - 파일의 상태를 확인(수정한 파일이 있냐)
git add - 커밋 가능한 상태로 바꿔주기 * 이거 입력하면 진입 가능한 파일들을 다 넣어준다
git commit -m "메시지" - 작업물들 커밋 시키기 -m 메시지 첨부
git log --oneline / git reflog - 작업했던 이력들을 보기 위한 명령어
git branch - 브랜치 확인 뒤에 이름 붙이면 해당 브랜치 생성
git swtich "브랜치명"- 해당 브랜치로 바꾸기
git reset --soft 나 hard - 소프트하게 리셋 하거나 하드하게 리셋하는 기능
git rm - 이 친구도 파일 삭제하는 기능
git merge - a에서 작업한걸 b에 옮기는 기능(옮겨질 대상으로 스위치 해둬야함 b에 a껄 옮기고 싶으면 b로 스위치 해두고 merge 해줘야함)


ctrl + / : 주석처리 시키기
<h> : 머리부분 제목을 담당해줌 1~ 여러개 달 수 있다. (블럭형임 막힌다 라인을 지가 다 먹음)
<p> : paragraph의 약자로 문단을 만들때 사용
<br> :  문단내에서 줄 바꿈이 필요하다면 사용
<span> : (inline형 라인안에서 같이 작동함)
HTML 엔티티(Entities) : HTML에서 특정 캐릭터들이 예약되어있기 때문에 표기의 혼란을 막기 위해서 사용하는 것입니다. 흔히 공백을 &nbsp; 로 쓰거나 <,>를 &lt; &gt; 처럼 쓰는 것들
&nbsp; : 띄워쓰기 해줌
UL태그(ul) : 순서없는 리스트(li)
OL 태그(ol) : 순서있는 리스트 type=a a~z, type:1 1~9, type:i 로마자 대충 그런 느낌
ol>li*4+ul*2 : 대충 > 이게 자식 만들기 * 거기서 4개로 만들기 +로 형제 만들어주기 이걸 이용해서 빠른 생성 가능
Table : 행과 열로 이루어진 표 <tr> <td> 태그로 행과 열을 만들어준다. 
td에서 colspan, rowspan : 각각 가로랑 세로로 묶어줌 단, 묶으면서 표가 밀려나기 때문에 밀려나가는 부분은 주석처리로 막아줘야함